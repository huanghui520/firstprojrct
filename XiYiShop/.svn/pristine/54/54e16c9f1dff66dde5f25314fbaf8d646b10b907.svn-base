package com.fajuary.xiyishop_android.tools;

import android.util.Log;

import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.AsyncHttpResponseHandler;
import com.loopj.android.http.RequestParams;

public class HttpHelper {
    private static Logger logger = Logger.getLogger(HttpHelper.class);

    //private static final String BASE_URL = "http://192.168.20.15:8171/link-app-web";

    private static final String BASE_URL = "http://192.168.0.27:8081/shop/";
    //private static final String BASE_URL = "http://192.168.20.15:8171/link-app-web";
    // private static final String BASE_URL = "http://111.200.52.179/link-app-web";

    public static AsyncHttpClient getAsyncHttpClient() {
        return asyncHttpClient;
    }

    // public static AsyncHttpClient client;
    public static AsyncHttpClient asyncHttpClient = new AsyncHttpClient();

    static {

    }

    public HttpHelper() {
    }

//    public static AsyncHttpClient getHttpClient() {
//        return client;
//    }
//
//    public static void cancelAll(Context context) {
//        client.cancelRequests(context, true);
//    }

    public static void get(String url, AsyncHttpResponseHandler handler) {
        asyncHttpClient.get(getAbsoluteUrl(url), handler);
        logger.i(new StringBuilder("GET").append(getAbsoluteUrl(url)).toString());
    }

    public static void get(String url, RequestParams params, AsyncHttpResponseHandler handler) {
        asyncHttpClient.get(getAbsoluteUrl(url), params, handler);
        logger.i(new StringBuilder("GET").append(getAbsoluteUrl(url)).append("&").append(params).toString());

    }


    public static void post(String url, AsyncHttpResponseHandler handler) {
        asyncHttpClient.post(getAbsoluteUrl(url), handler);
        logger.i(new StringBuilder("POST").append(getAbsoluteUrl(url)).toString());

    }

    public static void post(String url, RequestParams params, AsyncHttpResponseHandler handler) {
        if (params != null) {
            Log.e("TAG", params.toString());
            logger.i(new StringBuilder("POST").append(getAbsoluteUrl(url)).append("&").append(params).toString());
        }
            //  params.put("isDebug",true);
            // client.post(getAbsoluteUrl(url), params, handler);
            asyncHttpClient.post(getAbsoluteUrl(url), params, handler);


    }

//    public static void post(String url, Map<String, String> map, LKResponseHandler handler) {
//        if (!map.isEmpty()) {
//            //TODO 暂时写死
//            map.put("version", "3.0.1");
//
//            String sign = EncryptUtil.getSign(map);
//            map.put("sign", sign);
//        }
//
//        logger.i(new StringBuilder("LKResponseHandler POST").append(getAbsoluteUrl(url)).append("&").append(map).toString());
//        asyncHttpClient.post(getAbsoluteUrl(url), new RequestParams(map), handler);
//    }
//
//    public static void post(String url, LKResponseHandler handler) {
//        asyncHttpClient.post(getAbsoluteUrl(url), handler);
//        logger.i(new StringBuilder("POST").append(getAbsoluteUrl(url)).toString());
//
//    }


//    public static void setHttpClient(AsyncHttpClient asyncHttpClient) {
//        if (null==asyncHttpClient) {
//            asyncHttpClient = new AsyncHttpClient();
//        }
//        client = asyncHttpClient;
//        //@"application/json", @"text/json", @"text/javascript",@"text/html", @"text/plain"
//
//        client.addHeader(AsyncHttpClient.HEADER_CONTENT_TYPE, "application/json;text/json;text/javascript;text/html;text/plain");
//        client.addHeader(AsyncHttpClient.HEADER_CONTENT_ENCODING,"UTF-8");
//
//        //配置
//    }


    public static String getAbsoluteUrl(String relativeUrl) {
        return BASE_URL + relativeUrl;
    }


}
